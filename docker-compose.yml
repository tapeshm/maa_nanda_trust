services:
  dev:
    build:
      context: .
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
    image: hono-htmx-dev
    container_name: hono-htmx-dev
    ports:
      - '8787:8787'
      - '9229:9229'
    volumes:
      # Sync source code from host to container
      - ./:/app
      # Use a named volume for node_modules to persist it and
      # prevent the host mount from overwriting the one from the image build.
      # (Reverted) Use host-managed node_modules so files are owned by host UID
      # Persist pnpm's global store for faster installs
      - pnpm_store:/home/devuser/.local/share/pnpm
      # Provide Codex CLI auth (read-only) for the 'node' user
      - ${HOME}/.codex/auth.json:/home/node/.codex/auth.json:ro
    environment:
      UID: ${UID:-1000}
      GID: ${GID:-1000}
      PNPM_STORE_DIR: /home/devuser/.local/share/pnpm/store
      COREPACK_ENABLE_DOWNLOAD_PROMPT: '0'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      r2:
        condition: service_healthy

  r2:
    image: minio/minio:latest
    container_name: minio-r2
    command: server /data --console-address ":9001"
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio_data:/data
    env_file:
      - .dev.vars
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 2s
      retries: 5

volumes:
  pnpm_store:   # Caches pnpm packages for faster installs
  minio_data:   # Persists local R2 data
