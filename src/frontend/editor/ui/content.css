/* [D3:editor-tiptap.step-11:content-prose-namespace] Namespaced Tailwind Typography for content */

@import 'tailwindcss';

/* CSS custom properties for editor chrome theming */
:root {
  /* --editor-bg: #ffffff; */
  /* --editor-border: #e5e7eb; */
  /* --editor-focus: #93c5fd; */
  --editor-bg: theme(colors.gray.50);
  --editor-border: theme(colors.gray.400);
  --editor-focus: theme(colors.blue.100);
}

@media (prefers-color-scheme: dark) {
  :root {
    --editor-bg: #0f172a;
    --editor-border: #374151;
    --editor-focus: #3b82f6;
  }
}

/* [D3:editor-tiptap.step-11:namespaced-prose] All prose styles under .content-prose.prose namespace */
.content-prose.prose {
  /* Typography plugin applies here with the prose class */
  @apply prose prose-sm sm:prose-base lg:prose-lg xl:prose-2xl;
  @apply prose-zinc dark:prose-invert;
  @apply max-w-none;
  @apply flow-root;
}

/* Editor-specific content area styling */
.content-prose.prose h2,
.content-prose.prose h3,
.content-prose.prose p,
.content-prose.prose ul,
.content-prose.prose ol,
.content-prose.prose blockquote,
.content-prose.prose hr {
  /* Elements inherit prose typography; no additional rules needed */
}

/* [D3:editor-tiptap.step-15:flow-layout-grids] CSS grid-based layout for images */
@layer components {
  /* Figure grid utilities for multiple images */
  .editor-figure-grid-2 {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1rem;
  }

  .editor-figure-grid-3 {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;
  }

  @media (max-width: 640px) {
    .editor-figure-grid-2,
    .editor-figure-grid-3 {
      grid-template-columns: 1fr;
    }
  }

  /* [D3:editor-tiptap.step-15:image-figure-sizing] Figure width is controlled via CSS variable */
  .editor-figure {
    --editor-figure-width: 100%;
    --editor-figure-gutter: 1.5rem;
    --editor-figure-marker-offset: 1.5em;
    width: min(100%, var(--editor-figure-width));
    margin: 1.5rem auto;
  }

  .editor-figure .editor-image {
    display: block;
    width: 100%;
    height: auto;
  }

  .editor-figure--size-s {
    --editor-figure-width: 33.333%;
  }

  .editor-figure--size-m {
    --editor-figure-width: 50%;
  }

  .editor-figure--size-l {
    --editor-figure-width: 75%;
  }

  .editor-figure--size-xl {
    --editor-figure-width: 100%;
  }

  /* [D3:editor-tiptap.step-15:image-figure-alignment] Alignment with text flow using float */
  .editor-figure--align-left {
    float: left;
    margin-right: calc(var(--editor-figure-gutter) + var(--editor-figure-marker-offset));
    margin-bottom: 1rem;
    width: min(var(--editor-figure-width), 50%);
    max-width: 50%;
  }

  .editor-figure--align-center {
    margin-left: auto;
    margin-right: auto;
    text-align: center;
  }

  .editor-figure--align-right {
    float: right;
    margin-left: calc(var(--editor-figure-gutter) + var(--editor-figure-marker-offset));
    margin-bottom: 1rem;
    width: min(var(--editor-figure-width), 50%);
    max-width: 50%;
  }

  .editor-figure--wrap-break {
    float: none !important;
    width: 100% !important;
    margin-left: auto;
    margin-right: auto;
  }

  .editor-figcaption {
    margin-top: 0.5rem;
    font-size: 0.875rem;
    color: #6b7280;
    font-style: italic;
  }

  @media (prefers-color-scheme: dark) {
    .editor-figcaption {
      color: #9ca3af;
    }
  }

  .editor-figure--wrap-break + * {
    clear: both;
  }

  @media (min-width: 769px) {
    .content-prose.prose :where(ol, ul) {
      padding-inline-start: 2rem;
    }

    :where(.editor-figure--align-left),
    :where(.editor-figure--align-right) {
      --editor-figure-marker-offset: 1.75em;
    }

    :where(.editor-figure--align-left) ~ :where(ol, ul),
    :where(.editor-figure--align-right) ~ :where(ol, ul) {
      padding-inline-start: 2.5rem;
    }
  }

  @media (max-width: 768px) {
    .editor-figure {
      float: none;
      margin-left: auto;
      margin-right: auto;
      --editor-figure-width: 100%;
      width: 100%;
    }
  }
}
